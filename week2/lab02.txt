== Question 1 == 
a) What word is on line 2000 

Answer: Algonquian


b) the first word in the dictionary file ending with 's

Answer:A's


c) the last word in the dictionary that contains the substring ooz ?

Answer:zoozoos

d) What are the first the last and the longest?

Pipeline:
Answer:

e) How many are there?


f) Modified regex (optional)?

Pipeline:
Answer:

== Question 2 == 
a) How many total words does the file contain?  

Command: cat words.txt | wc
Answer:390582

b) How many total words, excluding those ending in "'s", are there in the dictionary?

Pipeline: grep \'s$ words.txt -v | wc
Answer: 299845

c) How could you use cat -n and grep to find out which word is on line 100000? 

Pipeline: cat words.txt -n | grep '^100000'
Answer: adviser

d) How could you use cat -n and grep to print the 700th line, and no other lines?

Pipeline: cat words.txt -n | grep ' 700\b'
Answer: Adirondack


e) How do you use head and tail to find out what word is on line 200000 

Pipeline: head words.txt -n200000 | tail -n1
Answer: geodynamics's

== Question 3 == 
a) which words contain the characters "lmn" consecutively?

Pipeline: egrep 'lmn' words.txt
Answer: Selmner, Selmner's. almner, almners, calmness, calmness's, calmnesses

b) how many words contain "zz", but do not end in apostrophe-s ('s)?

Pipeline: egrep zz.*[^\'s]$ words.txt | wc
Answer: 396

c) how many words contain four consecutive vowels?

Pipeline: egrep zz.*[^\'s]$ words.txt | wc
Answer: 205

d) how many words have a 9-letter dictionary word embedded inside them.

Pipeline: egrep ^[a-z]{9}$ words.txt > words9.txt | wc
Answer: 75651

e) which English words contain all 5 english vowels "aeiou" in that order?

Note, the word may contain more than 5 vowels but it must contain aeiou in that order. 

Pipeline: grep a.*e.*i.*o.*u.* words.txt | wc
Answer: 53

f) Challenge which English words contain exactly 5 vowels and the vowels are "aeiou" in that order?

Pipeline:  egrep ^[^eiou]*a[^aiou]*e[^aeou]*i[aeiu]*o[^aeio]*u[^aeiou]$

answer: absteminous, abstemiously, abstentious, adventious, adventitious, adventitiously,
arenicolous, arsenious, caesious, cavernicolus, facetious, facetiously, lateritious



== Question 4 == 

Pipeline:
Answer: 

a) Write a grep command that will print all the lines in the file where the electorate begins with W.

Pipeline: grep for' 'W parliament.txt
Answer:grep "for W" parliament.txt

b) Write a grep command that will list all the lines in the file where the MP's first name is Andrew. 

Pipeline: egrep '(Hon|Ms|Mr|Dr) Andrew' parliament.txt
Answer:

c) Write a grep command that will print all the lines in the file with three consecutive vowels.

Pipeline: egrep '[aeiou]{3}' parliament.txt
Answer:

d) Write a grep command that will print all the lines in the file where the MP's surname (last name) ends in the letter 'y'.

Pipeline: egrep 'y,' parliament.txt
Answer:

e) Write a grep command that will print all the lines in the file where the electorate ends in the letter 'y'.

Pipeline: egrep 'y\s*$' parliament.txt
Answer:

f) Write a grep command to print all the lines in the file where there is a word in the MP's name or the electorate name ending in ng.

Pipeline: egrep 'ng\b' parliament.txt
Answer:

g) Write a grep command that will print all the lines in the file where the MP's surname (last name) both begins and ends with a vowel. 

Pipeline: egrep '\b[aeiouAEIOU][a-z]*[aeiou],' parliament.txt
Answer:

h) Write a grep command that will print all the lines in the file where the electorate name contains multiple words (separated by spaces or hyphens). 

Pipeline: egrep 'for .*[- ].*\b$'
Answer:

== Question 5 == 

Write a shell pipline which prints the 2nd most common MP first name. 

Pipeline: { egrep '^The Hon Dr' parliament.txt | cut -d' ' -f4; egrep '^The Hon [^D]' parliament.txt | cut -d' ' -f3; egrep '^(Ms|Mr|Dr)' parliament.txt | cut -d' ' -f2 ; egrep 'The Hon D[^r]' parliament.txt | cut -d' ' -f3 ; }  | sort | uniq -c | sort -nr | head -n 2 | tail -n 1
Answer: 5 Andrew

== Question 6 ==

a) How many total classes are there?

Pipeline: wc classes.txt
Answer: 316

b) How many different courses have classes?

Pipeline: cut -c-8 classes.txt | uniq | wc
Answer: 42


c) Write a pipeline which will print the course with the most classes?

Pipeline: cut -c-8 classes.txt | sort | uniq -c | sort -nr | head -n 1
Answer: ENGG1811

d) Give a command line that prints the most frequently-used tut room? 

Pipeline: cut -f5 classes.txt | sort | uniq -c | sort -nr | head -n 1
Answer: OraganPhysU K17

e) Give a command line that prints the most popular time-of-day for tutes? 

Pipeline: cut -f4 classes.txt | cut -c5- | sort | uniq -c | sort -nr | head -n 1
Answer:

f) Which COMP courses run the most simultaneous classes of the same type? 

Pipeline: egrep '^COMP' classes.txt | cut -f2,5,6,7 --complement | sort | uniq -c | sort -nr | heads
Answer: COMP9814 and COMP9414

g) Write a pipeline that prints list of the course names (only) of COMP courses that run simultaneous classes of the same type?

Pipeline: egrep '^COMP' classes.txt |cut -f2,5,6,7 --complement | sort | uniq -c|  egrep '^\s*1' -v | cut -c9-16 | uniq
Answer: 18 not 16

== Question 7 (Challenge) ==

a) Match any line containing at least one A and at least one B.

Regexp:'[A.*B|B.*A]'

b) Match any line any line containing only the characters A and B such that all pairs of adjacent As occur before any pairs of adjacent Bs

Regexp: '(BB((B*)?(A?(B|\s)*))$|^(A*)?(B?(A|\s)*)$)'

c) Match any line containing  only the characters A and B such that all number of A's is divisible by 4.

Regexp: '^((B*)A(B*)A(B*)A(B*)A(B*))+$'

d) Match any line containing n As followed by n Bs and no other characters..

Regexp/script:


